%table{:border => "1", :cellpadding => "3", :cellspacing => "0"}
  %tr
    %td= link_to_unless_current "Nodes", nodes_path
    %td= link_to_unless_current "Farms", farms_path
    %td= link_to_unless_current "Roles", roles_path
%br/
%h1 Nodes
%br/
- Farm.find(:all).each do |farm|
  - if farm.running_instances.size > 0
    %h3= h farm.name
    %table{:border => "1", :cellpadding => "3", :cellspacing => "0"}
      %tr{:bgcolor => "#669900"}
        %th.first Name
        %th Hostname
        %th Instance ID
        %th AMI ID
        %th Reservation ID
        %th Security Groups
        %th Roles
        %th Uptime
        %th CPU
        - if farm.name != "Chef Server"
          %th Set Status
          %th &nbsp;
          %th.last &nbsp; 
      - farm.running_instances.each do |node|
        %tr.data_row
          %td= link_to node.name, url_for(node.chef_url) unless node.nil?
          %td= h node.ec2.public_hostname unless node.nil?
          %td= h node.ec2.instance_id unless node.nil?
          %td= h node.ec2.ami_id unless node.nil?
          %td= h node.ec2.reservation_id unless node.nil?
          %td= h node.ec2.security_groups unless node.nil?
          %td= h farm.role
          %td= h distance_of_time_in_words(0, node.uptime_seconds, true).capitalize unless node.nil?
          %td= h Node.cpu_util(node.ec2.instance_id) unless node.nil?
          - if farm.name != "Chef Server"
            - if node != nil && Node.get_qips_status(node.ec2.instance_id) == "busy"
              %td= button_to "Set Idle", idle_node_path(:id => node.ec2.instance_id), :confirm => "Are you sure you want to set #{node.ec2.instance_id} to idle?" unless node.nil?
            - else
              %td= button_to "Set Busy", busy_node_path(:id => node.ec2.instance_id), :confirm => "Are you sure you want to set #{node.ec2.instance_id} to busy?" unless node.nil?
            %td= link_to 'Edit', url_for(node.chef_url + '/edit') unless node.nil? || farm.name == "Chef Server"
            %td= link_to "Shutdown", shutdown_node_path(:id => node.ec2.instance_id), :confirm => "Are you sure you want to shutdown the instance #{node.ec2.instance_id}?" unless node.nil?
%br/
%br/
%hr/
%h1 EC2
%table{:border => "1", :cellpadding => "3", :cellspacing => "0"}
  %tr{:bgcolor => "#999999"}
    %th.first Name
    %th Hostname
    %th Instance ID
    %th AMI ID
    %th State
    %th Uptime
    %th.last &nbsp;
  - @ec2_instances.each do |ec2_instance|
    %tr.data_row
      %td= h ec2_instance["private_dns"] unless ec2_instance.nil?
      %td= h ec2_instance["public_dns"] unless ec2_instance.nil?
      %td= h ec2_instance["instance_id"] unless ec2_instance.nil?
      %td= h ec2_instance["ami_id"] unless ec2_instance.nil?
      %td= h ec2_instance["state"] unless ec2_instance.nil?
      %td= h distance_of_time_in_words(0, ec2_instance["uptime_seconds"], true).capitalize  unless ec2_instance.nil?
      - if ec2_instance["state"] == "pending" || ec2_instance["state"] == "running"
        %td= link_to "Shutdown", shutdown_node_path(:id => ec2_instance["instance_id"]), :confirm => "Are you sure you want to shutdown the instance #{ec2_instance["instance_id"]}?"
%br/
